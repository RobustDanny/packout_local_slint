import { Button, VerticalBox, GridBox, StandardTableView, LineEdit, HorizontalBox, ComboBox, StandardListView } from "std-widgets.slint";
import {DropDownMenu, NavigationBar, SearchBar, IconButton, MaterialWindow,
    FilledButton, ElevatedCard ,SmallAppBar, HorizontalDivider, TabBar, LargeAppBar, SegmentedButton, TonalButton} from "material.slint";

import "./fonts/Montserrat/Montserrat-Regular.ttf";
// import "./fonts/Montserrat/Montserrat-Bold.ttf";
import "./fonts/Montserrat/Montserrat-Medium.ttf";

struct ResidentData{
    id: int,
    apt: string,
    first_name: string,
    last_name: string,
    linked: bool,
}

struct CardData{
    id: int,
    resident_id: int,
    apt: string,
    added_date: string,
    hash: string,
}

struct LogData{
    id: int,
    action_type: string,
    action: string,
    date_time: string,
}

struct Package {
    id: int,
    apt: string,
    package_number: string,
}

component CardItem inherits ElevatedCard {
    in property <string> title;
    in property <string> content;

    VerticalBox {
        padding: 10px;
        Text {
            font-weight: 700;
            text: title;
        }
        Text {
            text: content;
        }
    }
}

export component AppWindow inherits MaterialWindow {

    out property <bool> show_resident_form: false;
    out property <bool> show_link_card_form: false;
    in-out property <bool> show_verification: false;
    in-out property <bool> show_resident_info: false;
    in-out property <bool> show_card_info: false;
    in-out property <bool> show_log_info: false;
    
    in-out property <int> current_tab: 0;

    in-out property <string> verification_status: "";
    in-out property <string> last_verified_name: "";
    in-out property <string> last_verified_apt: "";
    in-out property <string> info_alert: "";

    in-out property <int> verification_type: 0;

    in-out property <bool> inventory: false;
    
    // For resident selection in link card form
    in-out property <[string]> resident_list: [];
    in-out property <int> selected_resident_index: -1;
    
    // Watch for changes in selected_resident_index
    changed selected_resident_index => {
        if (selected_resident_index >= 0) {
            root.resident_info = get_resident_at_index(selected_resident_index);
        }
    }

    in-out property <CardData> card: {
        apt: "",
        added_date: "",
        // hash: "",
    };
    in-out property <CardData> card_info: {
        resident_id: 0,
        apt: "",
        added_date: "",
        hash: "",
    };
    in-out property <LogData> log: {
        action_type: "",
        action: "",
        date_time: "",
    };
    in-out property <LogData> log_info: {
        action_type: "",
        action: "",
        date_time: "",
    };
    in-out property <ResidentData> resident: {
        apt: "",
        first_name: "",
        last_name: "",
        linked: false,
    };
    in-out property <ResidentData> resident_info: {
        apt: "",
        first_name: "",
        last_name: "",
        linked: false,
    };
    in-out property <[[StandardListViewItem]]> residents_data: [[]];
    in-out property <[[StandardListViewItem]]> cards_data: [[]];
    in-out property <[[StandardListViewItem]]> logs_data: [[]];
    in-out property <[TableColumn]> table_columns: [
        {title: "ID"},
        {title: "Apt"},
        {title: "First Name"},
        {title: "Last Name"},
        {title: "Linked"},
    ];

    

    callback add_resident(ResidentData);
    callback add_card(CardData);
    callback add_log();

    callback show_one_resident_info(int);
    callback show_one_card_info(int);
    callback show_one_log_info(int);
    callback search_residents(string, int);
    callback search_cards(string, int);
    callback search_logs(string, int);

    callback remove_resident(int);

    callback show_residents_data();
    callback show_card_data();
    callback show_log_data();
    
    callback read_nfc_card() -> string;
    callback link_card_to_resident(int, string) -> string;
    callback get_resident_at_index(int) -> ResidentData;

    background: #FFFEFC;
    width: 1200px;
    height: 800px;
    padding: 20px;
    title: "Packout";
    // no-frame: true;
    // full-screen: true;
    icon: @image-url("icons/package-box.svg");
    default-font-family: "Montserrat";
    default-font-size: 13px;
    default-font-weight: 700;

    //Info Alert
if info_alert != "" : Rectangle {
    width: parent.width;
    height: parent.height;
    z: 100;  // Very high z-index to be on top
    
    // Semi-transparent background overlay
    
    // Click on overlay to close
    TouchArea {
        clicked => {
            root.info_alert = "";
        }
    }
    
    // Alert box
    Rectangle { 
        width: 400px;
        height: 200px;
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
        background: root.info_alert == "Card Linked successfully" ? #ECFDF5 : #FEF2F2;
        border-radius: 12px;
        border-width: 1px;
        border-color: root.info_alert == "Card Linked successfully" ? #10B981 : #EF4444;
        // drop-shadow-blur: 20px;
        drop-shadow-color: #00000050;
        
        VerticalLayout {
            padding: 30px;
            alignment: center;
            spacing: 25px;
            
            Text {
                text: root.info_alert;
                font-size: 16px;
                font-weight: 600;
                wrap: word-wrap;
                horizontal-alignment: center;
                color:  root.info_alert == "Card Linked successfully" ? #065F46 : #991B1B;
            }
        }
    }
}

    //Resident Info Form
    ElevatedCard {
        visible: root.show_resident_form;
        width: 400px;
        height: 500px;
        z: 1;
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
        
        VerticalLayout {
            padding: 30px;
            spacing: 20px;
            alignment: center;
            
            Text { 
                text: "Add New Resident";
                font-size: 20px;
                font-weight: 700;
            }
            
            Rectangle {
                height: 1px;
                background: #E0E0E0;
            }
            
            VerticalLayout {
                spacing: 15px;
                
                VerticalLayout {
                    spacing: 8px;
                    Text {
                        text: "Apartment Number:";
                        font-weight: 700;
                        font-size: 14px;
                    }
                    LineEdit {
                        placeholder-text: "e.g., 101";
                        height: 45px;
                        edited(new_text) => {
                            resident.apt = new_text;
                        }
                    }
                }
                
                VerticalLayout {
                    spacing: 8px;
                    Text {
                        text: "First Name:";
                        font-weight: 700;
                        font-size: 14px;
                    }
                    LineEdit {
                        placeholder-text: "Enter first name";
                        height: 45px;
                        edited(new_text) => {
                            resident.first_name = new_text;
                        }
                    }
                }
                
                VerticalLayout {
                    spacing: 8px;
                    Text {
                        text: "Last Name:";
                        font-weight: 700;
                        font-size: 14px;
                    }
                    LineEdit {
                        placeholder-text: "Enter last name";
                        height: 45px;
                        edited(new_text) => {
                            resident.last_name = new_text;
                        }
                    }
                }
            }
            
            Rectangle {
                height: 10px;
            }
            
            HorizontalLayout {
                alignment: center;
                spacing: 15px;
                
                FilledButton {
                    height: 50px;
                    width: 150px;
                    text: "Add Resident";
                    enabled: resident.apt != "" && resident.first_name != "" && resident.last_name != "";
                    clicked() => {
                        add_resident(resident);
                        root.show_resident_form = false;
                        // Clear the form
                        resident.apt = "";
                        resident.first_name = "";
                        resident.last_name = "";
                    }
                }
                
                FilledButton {
                    height: 50px;
                    width: 150px;
                    text: "Cancel";
                    clicked() => {
                        root.show_resident_form = false;
                        // Clear the form
                        resident.apt = "";
                        resident.first_name = "";
                        resident.last_name = "";
                    }
                }
            }
        }
    }

    //Link Card Form
    ElevatedCard {
        visible: root.show_link_card_form;
        width: 400px;
        height: 550px;
        z: 1;
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
        
        VerticalLayout {
            padding: 30px;
            spacing: 20px;
            alignment: center;
            
            Text { 
                text: "Link Card to Resident";
                font-size: 20px;
                font-weight: 700;
            }
            
            Rectangle {
                height: 1px;
                background: #E0E0E0;
            }
            
            VerticalLayout {
                spacing: 15px;
                
                Text {
                    text: "Select Resident:";
                    font-weight: 700;
                    font-size: 14px;
                }
                
                ComboBox {
                    model: resident_list;
                    current-index <=> selected_resident_index;
                    current-value: selected_resident_index >= 0 ? resident_list[selected_resident_index] : "-- Select a resident --";
                    selected(value) => {
                        if (selected_resident_index >= 0) {
                            root.resident_info = get_resident_at_index(selected_resident_index);
                        }
                    }
                }
                
                // Debug: Show what was selected
                if selected_resident_index >= 0 : Text {
                    text: "Selected index: " + selected_resident_index;
                    font-size: 10px;
                    color: #999;
                }
                
                if selected_resident_index >= 0 : VerticalLayout {
                    spacing: 10px;
                    
                    Rectangle {
                        height: 1px;
                        background: #E0E0E0;
                    }
                    
                    HorizontalLayout {
                        Text {
                            text: "Resident:";
                            font-weight: 700;
                            width: 100px;
                        }
                        Text {
                            text: resident_info.first-name + " " + resident_info.last-name;
                        }
                    }
                    
                    HorizontalLayout {
                        Text {
                            text: "Apartment:";
                            font-weight: 700;
                            width: 100px;
                        }
                        Text {
                            text: resident_info.apt;
                        }
                    }
                }
            }
            
            Rectangle {
                height: 10px;
            }
            
            VerticalLayout {
                spacing: 10px;
                
                Text {
                    text: "📋 Instructions:";
                    font-weight: 700;
                    font-size: 16px;
                }
                
                Text {
                    text: "1. Select a resident from the list above";
                    horizontal-alignment: left;
                }
                
                Text {
                    text: "2. Click 'Scan & Link Card' button";
                    horizontal-alignment: left;
                }
                
                Text {
                    text: "3. Place NFC card on the reader";
                    horizontal-alignment: left;
                }
                
                Text {
                    text: "4. Keep card on reader until complete";
                    horizontal-alignment: left;
                }
            }
            
            Rectangle {
                height: 10px;
            }
            HorizontalLayout {
                alignment: center;
                spacing: 15px;
                
                FilledButton {
                    height: 50px;
                    width: 150px;
                    text: "Scan & Link";
                    enabled: selected_resident_index >= 0;
                    clicked() => {
                        if (selected_resident_index >= 0) {
                            let result = link_card_to_resident(resident_info.id, resident_info.apt);
                            
                            if (result == "Success! Card linked.") {
                                root.show_link_card_form = false;
                                root.selected_resident_index = -1;
                            }
                        }
                    }
                }

                FilledButton {
                    height: 50px;
                    width: 150px;
                    text: "Cancel";
                    clicked() => {
                        root.show_link_card_form = false;
                        root.selected_resident_index = -1;
                        root.resident_info = {
                            id: 0,
                            apt: "",
                            first_name: "",
                            last_name: "",
                            linked: false,
                        };
                    }
                }
            }
        }
    }

    //Resident Info
    ElevatedCard {
        visible: root.show_resident_info;
        width: 450px;
        height: 400px;
        z: 1;
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
        
        VerticalLayout {
            padding: 30px;
            spacing: 20px;
            alignment: center;
            
            Text { 
                text: "Resident Information";
                font-size: 20px;
                font-weight: 700;
            }
            
            Rectangle {
                height: 1px;
                background: #E0E0E0;
            }
            
            VerticalLayout {
                spacing: 15px;
                
                HorizontalLayout {
                    spacing: 10px;
                    Text {
                        text: "Apartment:";
                        font-weight: 700;
                        font-size: 14px;
                        width: 120px;
                    }
                    Text {
                        text: resident_info.apt;
                        font-size: 14px;
                    }
                }
                
                HorizontalLayout {
                    spacing: 10px;
                    Text {
                        text: "First Name:";
                        font-weight: 700;
                        font-size: 14px;
                        width: 120px;
                    }
                    Text {
                        text: resident_info.first-name;
                        font-size: 14px;
                    }
                }
                
                HorizontalLayout {
                    spacing: 10px;
                    Text {
                        text: "Last Name:";
                        font-weight: 700;
                        font-size: 14px;
                        width: 120px;
                    }
                    Text {
                        text: resident_info.last-name;
                        font-size: 14px;
                    }
                }
                
                Rectangle {
                    height: 1px;
                    background: #E0E0E0;
                }
                
                HorizontalLayout {
                    spacing: 10px;
                    VerticalLayout{
                        alignment: center;
                        Text {
                        text: "Card Linked:";
                        font-weight: 700;
                        font-size: 14px;
                        width: 120px;
                    }
                    }
                    
                    Rectangle {
                        width: 80px;
                        height: 30px;
                        border-radius: 15px;
                        background: resident_info.linked ? #4CAF50 : #F44336;
                        HorizontalLayout {
                            alignment: center;
                            VerticalLayout {
                                alignment: center;
                                Text {
                                text: resident_info.linked ? "Yes" : "No";
                                color: white;
                                font-weight: 700;
                                font-size: 12px;
                            }
                            }
                            
                        }
                    }
                }
            }
            
            Rectangle {
                height: 20px;
            }
            
            HorizontalLayout {
                alignment: center;
                spacing: 15px;
                
                FilledButton {
                    text: "Update";
                    width: 120px;
                    height: 45px;
                    clicked() => {
                        // Add update functionality
                    }
                }
                
                FilledButton {
                    text: "Remove";
                    width: 120px;
                    height: 45px;
                    clicked() => {
                        root.show_resident_info = false;
                        remove_resident(resident_info.id);                        
                    }
                }
            }
        }
    }

    //Card Info
    ElevatedCard {
    visible: root.show_card_info;
    width: 500px;
    height: 450px;
    z: 1;
    x: (parent.width - self.width) / 2;
    y: (parent.height - self.height) / 2;
    
    VerticalLayout {
        padding: 30px;
        spacing: 20px;
        alignment: center;
        
        Text { 
            text: "Card Information";
            font-size: 20px;
            font-weight: 700;
        }
        
        Rectangle {
            height: 1px;
            background: #E0E0E0;
        }
        
        VerticalLayout {
            spacing: 15px;
            
            HorizontalLayout {
                spacing: 10px;
                Text {
                    text: "Card ID:";
                    font-weight: 700;
                    font-size: 14px;
                    width: 130px;
                }
                Text {
                    text: card_info.id;
                    font-size: 14px;
                }
            }
            
            HorizontalLayout {
                spacing: 10px;
                Text {
                    text: "Resident ID:";
                    font-weight: 700;
                    font-size: 14px;
                    width: 130px;
                }
                Text {
                    text: card_info.resident-id;
                    font-size: 14px;
                }
            }
            
            HorizontalLayout {
                spacing: 10px;
                Text {
                    text: "Apartment:";
                    font-weight: 700;
                    font-size: 14px;
                    width: 130px;
                }
                Text {
                    text: card_info.apt;
                    font-size: 14px;
                }
            }
            
            HorizontalLayout {
                spacing: 10px;
                Text {
                    text: "Added Date:";
                    font-weight: 700;
                    font-size: 14px;
                    width: 130px;
                }
                Text {
                    text: card_info.added-date;
                    font-size: 14px;
                }
            }
            
            Rectangle {
                height: 1px;
                background: #E0E0E0;
            }
            
            HorizontalLayout {
                spacing: 10px;
                Text {
                    text: "Card Hash:";
                    font-weight: 700;
                    font-size: 14px;
                    width: 130px;
                }
                Text {
                    text: card_info.hash;
                    font-size: 12px;
                    font-family: "monospace";
                    color: #666;
                }
            }
        }
        
        Rectangle {
            height: 20px;
        }
        
        HorizontalLayout {
            alignment: center;
            spacing: 15px;
            
            FilledButton {
                text: "Unlink Card";
                width: 140px;
                height: 45px;
                clicked() => {
                    // Add unlink functionality
                }
            }
            
            FilledButton {
                text: "Close";
                width: 140px;
                height: 45px;
                clicked() => {
                    root.show_card_info = false;
                }
            }
        }
    }
}

    //Log Info
    ElevatedCard {
        visible: root.show_log_info;
        width: 550px;
        height: 420px;
        z: 1;
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
        
        VerticalLayout {
            padding: 30px;
            spacing: 20px;
            alignment: center;
            
            Text { 
                text: "Log Entry Details";
                font-size: 20px;
                font-weight: 700;
            }
            
            Rectangle {
                height: 1px;
                background: #E0E0E0;
            }
            
            VerticalLayout {
                spacing: 15px;
                
                HorizontalLayout {
                    spacing: 10px;
                    Text {
                        text: "Log ID:";
                        font-weight: 700;
                        font-size: 14px;
                        width: 120px;
                    }
                    Text {
                        text: log_info.id;
                        font-size: 14px;
                    }
                }
                
                HorizontalLayout {
                    spacing: 10px;
                    Text {
                        text: "Date & Time:";
                        font-weight: 700;
                        font-size: 14px;
                        width: 120px;
                    }
                    Text {
                        text: log_info.date-time;
                        font-size: 14px;
                    }
                }
                
                HorizontalLayout {
                    spacing: 10px;
                    VerticalLayout{
                        alignment: center;
                        Text {
                        text: "Action Type:";
                        font-weight: 700;
                        font-size: 14px;
                        width: 120px;
                    }
                    }
                    VerticalLayout {
                        Rectangle {
                        width: 100px;
                        height: 28px;
                        border-radius: 14px;
                        background: log_info.action-type == "verified" ? #4CAF50 : 
                                   log_info.action-type == "linked" ? #2196F3 : 
                                   log_info.action-type == "remove" ? #F44336 : #9E9E9E;
                        HorizontalLayout {
                            alignment: center;
                            VerticalLayout{
                                alignment: center;
                                Text {
                                text: log_info.action-type;
                                color: white;
                                font-weight: 700;
                                font-size: 12px;
                            }
                            }
                        }
                    }
                    }
                }
                
                Rectangle {
                    height: 1px;
                    background: #E0E0E0;
                }
                
                VerticalLayout {
                    spacing: 8px;
                    Text {
                        text: "Action Details:";
                        font-weight: 700;
                        font-size: 14px;
                    }
                    Rectangle {
                        height: 90px;
                        border-radius: 8px;
                        background: #F5F5F5;
                        border-width: 1px;
                        border-color: #E0E0E0;
                        
                        VerticalLayout {
                            padding: 12px;
                            Text {
                                text: log_info.action;
                                font-size: 13px;
                                color: #424242;
                                wrap: word-wrap;
                            }
                        }
                    }
                }
            }
        }
    }

    // Background overlay touch area
    if root.show_link_card_form || root.show_resident_form || root.show_resident_info || root.show_card_info || root.show_log_info : TouchArea {
    height: 100%; 
    width: 100%;
    z: 0;  // Behind the forms
    clicked => { 
        root.show_link_card_form = false;
        root.show_resident_form = false;
        root.show_resident_info = false;
        root.show_card_info = false;
        root.show_log_info = false;
    }
}

    if info_alert != "" : TouchArea {
    height: 100%;
    width: 100%;
    z: 0;  // Behind the popup but above everything else
    clicked => {
        root.info_alert = "";
    }
}
    
    HorizontalLayout {
        width: parent.width;
        height: parent.height;
        alignment: center;
        
        VerticalLayout {
            padding: 20px;
            HorizontalLayout {
                alignment: center;
                spacing: 20px;
                width: 1000px;
                height: 80px;
                VerticalLayout {
                    width: 300px;
                    height: 56px;
                    alignment: center;
                    SegmentedButton {
                        items: [
                            { text: "People" },
                            { text: "Cards" },
                            { text: "Logs" }
                        ];
                        current-index <=> root.current_tab;
                        index_changed(index) => {
                            if (index == 0) {
                                table_columns = [
                                    {title: "ID"},
                                    {title: "Apt"},
                                    {title: "First Name"},
                                    {title: "Last Name"},
                                    {title: "Linked"}
                                ];
                                root.current_tab = index;
                                root.inventory = false;
                                show_residents_data();
                            } else if (index == 1) {
                                table_columns = [
                                    {title: "ID"},
                                    {title: "Apt"},
                                    {title: "Resident Name"},
                                    {title: "Added Date"}
                                ];
                                root.current_tab = index;
                                root.inventory = false;
                                show_card_data();
                            } else if (index == 2) {
                                table_columns = [
                                    {title: "ID"},
                                    {title: "Action Type"},
                                    {title: "Action"},
                                    {title: "Date Time"}
                                ];
                                root.current_tab = index;
                                root.inventory = false;
                                show_log_data();
                            }
                        }
                    }
                }
                VerticalLayout {
                    alignment: center;
                    height: 56px;
                    SearchBar {
                        width: 280px;
                        height: 40px;
                        edited(text) => {
                            root.current_tab == 0 ? search_residents(text, root.current_tab) :
                            root.current_tab == 1 ? search_cards(text, root.current_tab) :
                            search_logs(text, root.current_tab);
                        };
                        accepted(text) => {
                            search_residents(text, root.current_tab);
                        }
                    }
                }
                
                VerticalLayout {
                    alignment: center;
                    height: 56px;
                    HorizontalLayout {
                        spacing: 20px;
                        IconButton {
                            width: 32px;
                            height: 32px;
                            
                            icon: @image-url("icons/add_resident.svg");
                            tooltip: "Add resident";
                            clicked => {
                                root.show_resident_form = !show_resident_form;
    
                            }
                        }
                        IconButton {
                            width: 32px;
                            height: 32px;
                            
                            icon: @image-url("icons/link_card.svg");
                            tooltip: "Link card";
                            clicked => {
                                root.show_link_card_form = !show_link_card_form;
                            }
                        }
                        IconButton {
                            width: 32px;
                            height: 32px;
                            icon: root.inventory ? @image-url("icons/open_box.svg") : @image-url("icons/box.svg");
                            tooltip: "Inventory";
                            clicked => {
                                root.inventory = !root.inventory;
                            }
                        }
                        IconButton {
                            width: 32px;
                            height: 32px;
                            
                            icon: @image-url("icons/cog.svg");
                            tooltip: "Config";
                            clicked => {
                            }
                        }
                    }
                    
                }
                    
            }

            HorizontalLayout {
                alignment: center;
                StandardTableView {
                    width: 800px;
                    visible: !root.inventory;
                    columns: root.table_columns;
                    rows: root.current_tab == 0 ? residents_data :
                            root.current_tab == 1 ? cards_data :
                            logs_data;
                    current-row-changed(index) => {
                        if (root.current_tab == 0) {
                            root.show_resident_info = true;
                            show_one_resident_info(index);
                        } else if (root.current_tab == 1) {
                            root.show_card_info = true;
                            show_one_card_info(index);
                        } else {
                            root.show_log_info = true;
                            show_one_log_info(index);
                        }
                    }
                }
                StandardListView {
                    visible: root.inventory;
                    // VerticalBox {
                    //     spacing: 10px;
                    //     padding: 10px;
                
                    //     // Use a `for` loop to create a `CardItem` for each element in the `card_data` property.
                    //     for data in cards_data : CardItem {
                    //         title: cards_data.length;
                    //         content: cards_data.length;
                    //     }
                    // }
                }
            }
        }
    }

}